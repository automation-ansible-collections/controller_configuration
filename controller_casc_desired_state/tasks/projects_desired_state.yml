---
- block:
  - name: "Read Projects definitions"
    include_vars:
      file: "{{ item.src }}"
    with_filetree: "{{ dir_orgs_vars }}/{{ orgs }}/env/common/controller_projects.d/"
    when: item.state == 'file'
    register: contents

  - name: "Populate Projects list"
    set_fact:
      populate_controller_projects: "{{ (populate_controller_projects | default([])) + item.ansible_facts.controller_projects }}"
    loop: "{{ contents.results }}"
    when: contents.results is defined and item.ansible_facts.controller_projects is defined

  - name: "Set Projects Data Structure"
    set_fact:
      controller_projects: "{{ populate_controller_projects }}"
    when: populate_controller_projects is defined

  when: orgs is defined and dir_orgs_vars is defined

- name: "DESIRED STATE: Get the API list of all Projects and Inventories in the 'test' Organization"
  set_fact:
    __controller_api_projects: "{{ query('ansible.controller.controller_api', 'projects',
      host=controller_host, username=controller_username,
      password=controller_password, verify_ssl=false) }}"

- debug:
    var: "{{ item }}"
  loop:
      - __controller_api_projects

- name: "DESIRED STATE: Find the difference of Project between what is on the Controller versus CasC on SCM"
  set_fact:
    __projects_difference: "{{ lookup('redhat_cop.controller_casc.controller_object_diff_temp',
      api_list=__controller_api_projects, compare_list=controller_projects,
      with_present=false, set_absent=true ) }}"

- debug:
    var: "{{ item }}"
  loop:
      - __projects_difference

- name: "DESIRED STATE: Set project's list to be configured"
  set_fact:
    controller_projects: "{{ __projects_difference }}"

- name: "DESIRED STATE: Configure Controller Projects"
  import_role:
    name: redhat_cop.controller_configuration.projects
...
