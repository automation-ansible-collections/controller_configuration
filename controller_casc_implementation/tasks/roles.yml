---
- block:
  - name: "Read Roles definitions"
    include_vars:
      file: "{{ item.src }}"
    with_filetree: "{{ dir_orgs_vars }}/{{ orgs }}/env/common/controller_roles.d/"
    when: item.state == 'file'
    register: contents

  - name: "Populate Roles list"
    set_fact:
      populate_controller_roles: "{{ (populate_controller_roles | default([])) + item.ansible_facts.controller_roles }}"
    loop: "{{ contents.results }}"
    when: contents.results is defined and item.ansible_facts is defined

  - name: "Set Roles Data Structure"
    set_fact:
      controller_roles: "{{ populate_controller_roles }}"
    when: populate_controller_roles is defined

  when: dir_orgs_vars is defined and orgs is defined

#- name: Configure Controller Roles | Launch roles creation
#  import_role:
#    name: redhat_cop.controller_configuration.roles

- name: Create Role Based Access Entry on Controller
  ansible.controller.role:
    user:                           "{{ __controller_role_item.0.user | default(omit, true) }}"
    team:                           "{{ __controller_role_item.0.team | default(omit, true) }}"
    role:                           "{{ __controller_role_item.1 | mandatory }}"
    target_team:                    "{{ __controller_role_item.0.target_team | default(omit, true) }}"
    target_teams:                   "{{ __controller_role_item.0.target_teams | default(omit, true) }}"
    inventory:                      "{{ __controller_role_item.0.inventory | default(omit, true) }}"
    inventories:                    "{{ __controller_role_item.0.inventories | default(omit, true) }}"
    job_template:                   "{{ __controller_role_item.0.job_template | default(omit, true) }}"
    job_templates:                  "{{ __controller_role_item.0.job_templates | default(omit, true) }}"
    workflow:                       "{{ __controller_role_item.0.workflow | default(omit, true) }}"
    workflows:                      "{{ __controller_role_item.0.workflows | default(omit, true) }}"
    credential:                     "{{ __controller_role_item.0.credential | default(omit, true) }}"
    credentials:                    "{{ __controller_role_item.0.credentials | default(omit, true) }}"
    organization:                   "{{ __controller_role_item.0.organization | default(omit, true) }}"
    organizations:                  "{{ __controller_role_item.0.organizations | default(omit, true) }}"
    lookup_organization:            "{{ __controller_role_item.0.lookup_organization | default(omit, true) }}"
    project:                        "{{ __controller_role_item.0.project | default(omit, true) }}"
    projects:                       "{{ __controller_role_item.0.projects | default(omit, true) }}"
    state:                          "{{ __controller_role_item.0.state | default(controller_state | default('present')) }}"

    # Role Standard Options
    controller_username:            "{{ controller_username | default(omit, true) }}"
    controller_password:            "{{ controller_password | default(omit, true) }}"
    controller_oauthtoken:          "{{ controller_oauthtoken | default(omit, true) }}"
    controller_host:                "{{ controller_hostname | default(omit, true) }}"
    controller_config_file:         "{{ controller_config_file | default(omit, true) }}"
    validate_certs:                 "{{ controller_validate_certs | default(omit) }}"
  loop: "{{ configure_controller_roles | subelements('roles') }}"
  loop_control:
    loop_var: __controller_role_item
  no_log: "{{ controller_configuration_role_secure_logging }}"
  async: 1000
  poll: 0
  register: __controller_role_job_async

- name: "Configure Roles | Wait for finish the Roles creation"
  async_status:
    jid: "{{ __controller_role_job_async_results_item.ansible_job_id }}"
  register: __controller_role_job_async_result
  until: __controller_role_job_async_result.finished
  retries: 10
  loop: "{{ __controller_role_job_async.results }}"
  loop_control:
    loop_var: __controller_role_job_async_results_item
  when: __controller_role_job_async_results_item.ansible_job_id is defined
  no_log: "{{ controller_configuration_role_secure_logging }}"
...
